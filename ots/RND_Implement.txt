Port open,
ssh keybase login from primary to standby db
rsync package installed 
password base auth all db server 
select name,setting from pg_settings where name like 'archive%' ;
select pg_switch_wal();

password: hello, whoami, edb


************ Install EPAS 15 PRIMARY SERVER ************
sudo curl -1sLf 'https://downloads.enterprisedb.com/zp579PrIC9a7kY4rQtxX63HAaXHtzeCA/enterprise/setup.rpm.sh' | sudo -E bash
sudo dnf -y install edb-as15-server
sudo PGSETUP_INITDB_OPTIONS="-E UTF-8" /usr/edb/as15/bin/edb-as-15-setup initdb
sudo systemctl start edb-as-15
sudo su - enterprisedb
psql edb
ALTER ROLE enterprisedb IDENTIFIED BY edb;
CREATE DATABASE hr;
\c hr
CREATE TABLE public.dept (deptno numeric(2) NOT NULL CONSTRAINT dept_pk
PRIMARY KEY, dname varchar(14) CONSTRAINT dept_dname_uq UNIQUE, loc
varchar(13));
INSERT INTO dept VALUES (10,'ACCOUNTING','NEW YORK');
INSERT into dept VALUES (20,'RESEARCH','DALLAS');
SELECT * FROM dept;
=============== valid ====================

*********** STANDBY SERVER ****************
sudo curl -1sLf 'https://downloads.enterprisedb.com/zp579PrIC9a7kY4rQtxX63HAaXHtzeCA/enterprise/setup.rpm.sh' | sudo -E bash
sudo dnf -y install edb-as15-server

****************** Replica *********
----- Primary site 

sudo su - enterprisedb
psql edb
show archive_mode;
mkdir /var/lib/edb/as15/ARCHIVELOG  -p
chown -R enterprisedb:enterprisedb /var/lib/edb/as15/ARCHIVELOG
vim /var/lib/edb/as15/data/postgresql.conf

promote_trigger_file = '/tmp/trigger_file.trg'
archive_mode = on
#archive_command = 'cp %p /var/lib/edb/as15/ARCHIVELOG/%f'
archive_command = 'test ! -f enterprisedb@192.168.5.241:/var/lib/edb/as15/ARCHIVELOG/%f && rsync -a %p enterprisedb@192.168.5.241:/var/lib/edb/as15/ARCHIVELOG/%f'
#archive_command = 'rsync -a %p enterprisedb@epass:/var/lib/edb/as15/ARCHIVELOG/%f'
#archive_command = 'rsync -a %p enterprisedb@epass:/var/lib/edb/as15/ARCHIVELOG/%f'
wal_level = replica
max_wal_senders = 3
max_replication_slots = 4

systemctl restart edb-as-15.service

sudo su - enterprisedb
psql edb
show archive_mode;
CREATE ROLE replication WITH REPLICATION PASSWORD 'hello' LOGIN;

vim /var/lib/edb/as15/data/postgresql.conf
listen_addresses = '*'		in prod must use replica server ip 

vim /var/lib/edb/as15/data/pg_hba.conf
# IPv4 local connections:
host    all             all             0.0.0.0/0              scram-sha-256
host  replication     replication     192.168.5.241/32         scram-sha-256

systemctl restart edb-as-15.service

configure ssh keybase auth in enterprisedb user 

configure firewall 

----- Standby site 

Stop edb-as-15.service			-- importance 
backup data directory 
sudo su - enterprisedb
mkdir /var/lib/edb/as15/ARCHIVELOG  -p
pg_basebackup -h 192.168.5.240 -U enterprisedb -D /var/lib/edb/as15/data -U replication -v -P --wal-method=stream --write-recovery-conf
touch /var/lib/edb/as15/data/standby.signal
systemctl restart edb-as-15.service
systemctl enable edb-as15-server

========== valid ============


---- async to sync -----
-- PRIMARY
vim /var/lib/edb/as15/data/postgresql.conf
synchronous_commit = remote_apply
synchronous_standby_names = 'replica2'		use cluser name 

-- Secondary 
vim /var/lib/edb/as15/data/postgresql.conf

cluster_name = 'replica2'			cluser name 
hot_standby = on
primary_conninfo = 'host=192.168.5.240 port=5444 user=replication'

**************** EFM ***************
Master Node (node1) - 192.168.5.240
Standby Node (node2)- 192.168.5.241
Witness Node (node3) - 192.168.5.242
VIP - 192.168.5.243

yum -y install java
-- Update pg_hba.conf file on both primary and standby server with the information of the replication and witness servers and reload it
host    all             all            192.168.5.240/32           scram-sha-256
host    all             all            192.168.5.241/32           scram-sha-256
host    all             all            192.168.5.242/32           scram-sha-256

select pg_reload_conf();

--- Install EFM binary in all Master ,Standby and witness server 
dnf -y install edb-efm47
--- configure EFM Primary db
create user efm with password 'hello' superuser ;
alter role efm with password 'hello' superuser ;
su - efm
psql edb

cd /etc/edb/efm-4.7/
cp efm.properties.in  efm.properties
cp efm.nodes.in  efm.nodes
chown efm:efm efm.properties
chown efm:efm efm.nodes

/usr/edb/efm-4.7/bin/efm encrypt efm
-- past encrypt password to efm.properties
vim efm.properties

db.user=efm
db.password.encrypted=c0c2f3d8c85ad2c7d59ee7fceb27bddd
db.port=5444
db.database=edb
db.service.owner=enterprisedb
db.service.name= edb-as-15
db.bin=/usr/edb/as15/bin/
db.data.dir=/var/lib/edb/as15/data/
db.config.dir=/var/lib/edb/as15/data/
bind.address=192.168.5.240:7800
is.witness=false
ping.server.ip=192.168.5.1		-- ip muse be alive 	
auto.allow.hosts=true
virtual.ip=192.168.5.243				
virtual.ip.interface=eth0
virtual.ip.prefix=24
virtual.ip.single=true

NB: user.email can't blank, 

--     Add nodes entries in efm.nodes 
192.168.5.240:7800
192.168.5.241:7800
192.168.5.242:7800


systemctl start edb-efm-4.7.service

configure firewall for 7800 port 

/usr/edb/efm-4.7/bin/efm cluster-status efm

-- Standby Node Configuration
-- copy file from primary to standby 
scp efm.nodes efm.properties root@192.168.5.241:/etc/edb/efm-4.7
chown efm:efm /etc/edb/efm-4.7/efm.properties
chown efm:efm /etc/edb/efm-4.7/efm.nodes

vim /etc/edb/efm-4.7/efm.properties

bind.address=192.168.5.241:7800

firewall-cmd --permanent --add-port=7800/tcp
firewall-cmd --reload

systemctl start edb-efm-4.7.service

/usr/edb/efm-4.7/bin/efm cluster-status efm

 efm promote efm

----- witness configure
-- copy file from primary to standby 
scp efm.nodes efm.properties root@192.168.5.242:/etc/edb/efm-4.7
chown efm:efm /etc/edb/efm-4.7/efm.properties
chown efm:efm /etc/edb/efm-4.7/efm.nodes
vim /etc/edb/efm-4.7/efm.properties

bind.address=192.168.5.242:7800
is.witness=true 

firewall-cmd --permanent --add-port=7800/tcp
firewall-cmd --reload
systemctl start edb-efm-4.7.service

/usr/edb/efm-4.7/bin/efm cluster-status efm

/usr/edb/efm-4.7/bin/efm allow-node  efm 192.168.5.240



synchronous_commit = remote_apply
synchronous_standby_names = '*'
select usename, application_name, client_addr, state, sync_priority, sync_state from pg_stat_replication;


hot_standby = on
primary_conninfo = 'host=192.168.5.140 port=5400 user=replication'


dnf install chrony -y
systemctl enable chronyd
systemctl start chronyd
dnf install vim -y
dnf install rsync -y 
dnf install net-tools -y


auto.resume.period
efm set-priority efm ip address




synchronous_commit = remote_apply
synchronous_standby_names = '*'
select usename, application_name, client_addr, state, sync_priority, sync_state from pg_stat_replication;


hot_standby = on
primary_conninfo = 'host=192.168.5.140 port=5400 user=replication'


dnf install chrony -y
systemctl enable chronyd
systemctl start chronyd

efm add-node cluster_name ip_address [priority]


auto.resume.period
efm set-priority efm ip address


dr1-mz-db-01

curl -O https://releases.ubuntu.com/18.04/ubuntu-18.04.6-desktop-amd64.iso



promote_trigger_file = '/tmp/trigger_file.trg'   postgresql.conf



auto.allow.hosts=true			efm properties



------------- Pgbouncer ---------
sudo curl -1sLf 'https://downloads.enterprisedb.com/zp579PrIC9a7kY4rQtxX63HAaXHtzeCA/enterprise/setup.rpm.sh' | sudo -E bash
sudo dnf -y install edb-pgbouncer120
cd /etc/edb/pgbouncer1.20/
vim userlist.txt
"enterprisedb" "edb"			-- username and password 
vim edb-pgbouncer-1.20.ini
[databases]
;; foodb over Unix socket
pgtest = host=192.168.5.242 port=5444 dbname=edb
listen_addr = *
listen_port = 6432
auth_file = /etc/edb/pgbouncer1.20/userlist.txt
pool_mode = session

systemctl start edb-pgbouncer-1.20.service

ensure database pg_hab.conf acept pgbouncer ip 
firewall-cmd --permanent --add-port=6432/tcp
firewall-cmd --reload

------------ PEM ------------
curl -1sLf 'https://downloads.enterprisedb.com/zp579PrIC9a7kY4rQtxX63HAaXHtzeCA/enterprise/setup.rpm.sh' | sudo -E bash
sudo dnf -y install edb-as15-server
sudo PGSETUP_INITDB_OPTIONS="-E UTF-8" /usr/edb/as15/bin/edb-as-15-setup initdb
sudo systemctl start edb-as-15
sudo su - enterprisedb
psql edb
ALTER ROLE enterprisedb IDENTIFIED BY edb;

sudo dnf -y install edb-as15-server-sslutils
sudo dnf -y install edb-pem
/usr/edb/pem/bin/configure-pem-server.sh

Install type: 1:Web Services and Database, 2:Web Services 3: Database [ ] :1
Enter local database server installation path (i.e. /usr/edb/as12 , or /usr/pgsql-12, etc.) [ ] :/usr/edb/as15/
Enter database super user name [ ] :enterprisedb
Enter database server port number [ ] :5444
Enter database super user password [ ] :
Please enter CIDR formatted network address range that agents will connect to the server from, to be added to the server's pg_hba.conf file. For example, 192.168.1.0/24 [ 0.0.0.0/0 ] :192.168.5.0/24
Enter database systemd unit file or init script name (i.e. edb-as-12 or postgresql-12, etc.) [ ] :edb-as-15
Please specify agent certificate path (Script will attempt to create this directory, if it does not exists) [ /root/.pem/ ] :


firewall-cmd --permanent --add-port=8443/tcp
firewall-cmd --reload

httpd server enable and start after reboot 

https://192.168.5.242:8443/pem

user: enterprisedb
pass: edb



------------ Barman ------------
-- barman server 
dnf install rsync
curl -1sLf 'https://downloads.enterprisedb.com/zp579PrIC9a7kY4rQtxX63HAaXHtzeCA/enterprise/setup.rpm.sh' | sudo -E bash
sudo dnf -y install edb-as15-server				--- binary, no need install db 

sudo yum module install python36
yum install barman barman-cli
id barman
barman --version
passwd barman
su - barman
ssh-keygen
ssh-copy-id enterprisedb@192.168.5.241				--- db server user 
check ssh login 

--- DB server 
su - enterprisedb
ssh-keygen				-- if you already do this no need again 
ssh-copy-id barman@192.168.5.242
check ssh login 
psql edb
create user barman superuser  password 'hello';
-- Update pg_hba.conf and add barman server ip then reload 
host    all             all            192.168.5.242/32           scram-sha-256

-- Barman server 
cp /etc/barman.conf	/etc/barman.conf.orginal
vim /etc/barman.conf
barman_home = /var/lib/barman/edb01
compression = gzip
immediate_checkpoint = true
basebackup_retry_times = 3
reuse_backup = link

cd /etc/barman.d
vim edb01.conf

[edb01]
description =  "EDB01 Server backup"
ssh_command = ssh enterprisedb@192.168.5.241
conninfo = host=192.168.5.241 user=barman port=5444 dbname=edb password=hello
backup_options = concurrent_backup
backup_method = rsync
archiver = on


--- on DB server 
edit postgresql.conf
archive_command = 'test ! -f barman@192.168.5.242:/var/lib/barman/edb01/edb01/incoming/%f && rsync -a %p barman@192.168.5.242:/var/lib/barman/edb01/edb01/incoming/%f'

restart db service 

select pg_switch_wal();			--- for switch wal and check it in barman server 


-- barman switch-xlog --force --archive edb01			--- failed wall 

barman list-server
barman show-server edb01
barman check edb01

barman replication-status edb01
barman backup edb01
barman list-backup